name: "SubpixelConv"
layer {
    name: "lr_input"
    type: "Data"
    top: "lr_input"
    data_param {
        source: "data/celebA/train_lr.lmdb"
        batch_size: 256
        backend: LMDB
    }
    include {
        phase: TRAIN
    }
}
layer {
    name: "lr_input"
    type: "Data"
    top: "lr_input"
    data_param {
        source: "data/celebA/test_lr.lmdb"
        batch_size: 256
        backend: LMDB
    }
    include {
        phase: TEST
    }
}
layer {
    name: "hr_ref"
    type: "Data"
    top: "hr_ref"
    data_param {
        source: "data/celebA/train_hr.lmdb"
        batch_size: 256
        backend: LMDB
    }
    include {
        phase: TRAIN
    }
}
layer {
    name: "hr_ref"
    type: "Data"
    top: "hr_ref"
    data_param {
        source: "data/celebA/test_hr.lmdb"
        batch_size: 256
        backend: LMDB
    }
    include {
        phase: TEST
    }
}
layer {
    name: "hr_ref_unshuffled"
    type: "Python"
    top: "hr_ref_unshuffled"
    bottom: "hr_ref"
    python_param {
        module: 'caffe_ps'
        layer: 'PeriodicUnshufflingLayer'
        param_str: '{"scale": 4}'
    }
}
layer {
    name: "conv1"
    type: "Deconvolution"
    bottom: "lr_input"
    top: "conv1"
    convolution_param {
        num_output: 64
        kernel_size: 1
        stride: 1
        pad: 0
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "relu1"
    type: "ReLU"
    bottom: "conv1"
    top: "relu1"
    relu_param {
        negative_slope: 0.2
    }
}
layer {
    name: "conv2"
    type: "Deconvolution"
    bottom: "relu1"
    top: "conv2"
    convolution_param {
        num_output: 64
        kernel_size: 5
        stride: 1
        pad: 2
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "relu2"
    type: "ReLU"
    bottom: "conv2"
    top: "relu2"
    relu_param {
        negative_slope: 0.2
    }
}
layer {
    name: "conv3"
    type: "Deconvolution"
    bottom: "relu2"
    top: "conv3"
    convolution_param {
        num_output: 48
        kernel_size: 5
        stride: 1
        pad: 2
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "tanh1"
    type: "TanH"
    bottom: "conv3"
    top: "tanh1"
}
layer {
    name: "tanh1_loss"
    bottom: "tanh1"
    bottom: "hr_ref_unshuffled"
    top: "tanh1_loss"
    type: "EuclideanLoss"
}